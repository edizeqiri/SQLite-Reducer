CREATE TABLE F (p BOOLEAN NOT NULL NULL NOT NULL, i BOOLEAN); INSERT INTO F SELECT * FROM (VALUES ((NOT false), false), (NULL, (NOT (NOT true)))) AS L WHERE (((+(+(-((+110) / (+((-(-150)) * ((247 * (91 * (-47))) + (-86)))))))) = ((((+(+(24 / (+((+89) * (+58)))))) * (-(-((193 + 223) / (-(222 / 219)))))) * (34 * 70)) * (+(+((((+(+(-202))) / (+52)) - (-(228 + (-104)))) * (-24)))))) = (false <> (66 <> 8)));CREATE TABLE IF NOT EXISTS t_DX44 (c_LGUf NUMERIC, c_Hlmf3w REAL DEFAULT 749171.692897985, c_ewZ TEXT, c_EwP TEXT DEFAULT 'Fn58MvfLqzQ2DMC4', c_YBA7sBV TEXT CHECK (length(c_YBA7sBV) > 0)); INSERT OR FAIL INTO t_DX44 (c_LGUf, c_Hlmf3w, c_ewZ, c_EwP, c_YBA7sBV) VALUES (-958347, 803354.0705377955, 'MQ_2', 'qrZM84MTMHUkkov_3', 'IcJ_4'), (1119541, 661160.0780749931, '7131k8CH2I7rflmaZmFh_102', '1sGjUivjzF_103', 'fwAI_104'), (2703615, 419682.84648422664, '6u2sAbJVjXHWP_202', 'YpYYmjS_203', 'AyMTHlf_204'); SELECT EXISTS (SELECT 1 FROM t_DX44 LIMIT 1) AS alias_xvE FROM t_DX44 WHERE NOT (t_DX44.c_EwP / t_DX44.c_ewZ) GROUP BY c_ewZ, c_Hlmf3w, c_LGUf HAVING CASE WHEN REPLACE(t_DX44.c_YBA7sBV, '7ZjVE', -109744) THEN t_DX44.c_LGUf ELSE TRUE END ORDER BY c_LGUf DESC, c_YBA7sBV;CREATE TABLE  table_0 (table_0_c0 TEXT, table_0_c1 REAL ) ; CREATE TABLE  table_2  (table_2_c0 UNSIGNED BIG INT, table_2_c1 BIGINT, table_2_c2 BIGINT ) ; CREATE TABLE IF NOT EXISTS table_3 (table_3_c0 UNSIGNED BIG INT, table_3_c1 DATETIME ) ; INSERT INTO table_3 (table_3_c0, table_3_c1) VALUES (-2, NULL) ; CREATE TRIGGER trigger_5 BEFORE INSERT ON table_0 BEGIN DELETE FROM table_2 ; END; SELECT DISTINCT * FROM table_3, table_2 WHERE EXISTS ( SELECT  table_3_c1 FROM table_3 LIMIT NULL ) LIMIT 3;  CREATE TABLE t1 (  col0 text ,  col1 int ,  col2 text ,  col3 int ,  col4 text ); INSERT INTO t1 (col0,col1,col2,col3,col4) VALUES ('GZuiY',620393216,'AHX',-1305616808,'TPudz8'); INSERT INTO t1 (col0,col1,col2,col4) VALUES (NULL,2049300292,'sYCWGtg8J','RxYwTBHZ3');  SELECT LAG(- (- (-403961669))) OVER () AS win0, AVG(UPPER ((t1.col2 || 'HAFG'))) OVER (PARTITION BY col4 ORDER BY col3) AS win1, ROW_NUMBER() OVER (RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS win2 FROM t1;CREATE  TABLE  biq (ype , ucn , ynu ); INSERT OR REPLACE INTO biq (ype, ucn, ynu) VALUES (CURRENT_TIMESTAMP , 1 , 1 ); SELECT  ucn, ype FROM biq WHERE biq.ype / 709620288 ;CREATE TABLE t0 (     c0 BOOLEAN,     c1 INTEGER,     c2 BOOLEAN,     c3 TEXT,     c4 NULL,     c5 INTEGER,     c6 BOOLEAN ); INSERT INTO t0 VALUES (FALSE, 1, FALSE, 'text16', NULL, COALESCE(72, 81, 25, 72), FALSE); INSERT INTO t0 VALUES (TRUE, likely( FALSE), TRUE, 'text75', NULL, 26, FALSE); INSERT INTO t0 VALUES (FALSE, 8, FALSE, 'text58', NULL, 74, TRUE); INSERT INTO t0 VALUES (TRUE, 15, FALSE, CAST(100 AS TEXT), NULL, IFNULL(62, 91), TRUE); SELECT t1.c6 AS c7, t1.c0 AS c8, t1.c5 AS c9, t1.c4 AS c10 FROM t0 AS t1 WHERE t1.c0 = t1.c0 ORDER BY c7, c9; SELECT   CASE WHEN subq1.c13 <> subq1.c13 THEN subq1.c13       ELSE subq1.c13  END AS c14, subq1.c13 AS c15, subq1.c13 AS c16, CAST(subq1.c13 AS TEXT) AS c17, subq1.c13 AS c18 FROM (SELECT FALSE AS c13    FROM (SELECT TRUE AS c7, t1.c1 AS c8, t1.c2 AS c9, t1.c2 AS c10, t1.c5 AS c11, t1.c1 AS c12       FROM t0 AS t1       WHERE 89 > t1.c1       ORDER BY c9, c11 COLLATE NOCASE ASC       LIMIT 2316622805712276698 ) as subq0    WHERE true    ORDER BY c13, c13, c13, c13 ASC) as subq1 WHERE subq1.c13 =   CASE subq1.c13 WHEN subq1.c13 = subq1.c13 THEN subq1.c13       ELSE subq1.c13  END OR subq1.c13 = NULLIF(subq1.c13, subq1.c13) OR subq1.c13 IS NOT NULL AND subq1.c13 = subq1.c13 ORDER BY c15, c17, c15 ASC LIMIT 8255429340041652679 OFFSET 7309356072816970115; CREATE VIEW view1 AS VALUES ( (0x7067e3cec226b60e % 904.1747253662293) ); SELECT * FROM ( view1 ) AS gwydaz WHERE abs(-6002);CREATE TABLE tbl_wqiwo (icol_dhwup INTEGER, rcol_eitnk REAL DEFAULT 55001.080638557934, tcol_yqthy TEXT, rcol_bjzii REAL, icol_jcscw INTEGER, tcol_wskpp); WITH with_vysww AS (SELECT * FROM tbl_wqiwo WHERE ((EXISTS (SELECT SUM(COALESCE(NULL, CAST(tbl_wqiwo.icol_ovpnc != -551 AS REAL))) FROM tbl_wqiwo WHERE (tbl_wqiwo.icol_ovpnc IN (1, 1, 1, 1) AND tbl_wqiwo.tcol_yqthy IS NOT NULL)) OR tbl_wqiwo.tcol_yqthy LIKE 'v_hkpkj') AND EXISTS (SELECT 1 FROM tbl_wqiwo WHERE tbl_wqiwo.icol_dhwup IS NULL)) ORDER BY tbl_wqiwo.tcol_wskpp), with_ekqzi AS (SELECT * FROM with_vysww WHERE with_vysww.icol_jcscw != 5472), with_kepqw AS (SELECT * FROM with_vysww GROUP BY with_vysww.icol_ovpnc ORDER BY with_vysww.rcol_bjzii) SELECT * FROM with_kepqw;CREATE TABLE t_b8TmXJYj7 (c_NiVEveUN3c NUMERIC DEFAULT -960991, c_mfOVVp6LJ INTEGER, c_aegv NUMERIC, UNIQUE (c_aegv)); CREATE TABLE IF NOT EXISTS t_KVR (c_4fLRz NUMERIC, c_pLcd NUMERIC, c_0g82YslPQP TEXT, c_ZrDP INTEGER, UNIQUE (c_0g82YslPQP, c_ZrDP, c_pLcd)); CREATE TABLE IF NOT EXISTS t_EiJ (c_SdSqONhoo REAL, c_kRp REAL, c_xy5FvRM NUMERIC, c_gjO9hafpB TEXT COLLATE NOCASE, c_KijMRW5dz NUMERIC, c_5t6reT NUMERIC, c_KZCXb INTEGER, c_Le8nWz INTEGER DEFAULT -375053, c_6C2xHrvsC NUMERIC); WITH cte_1VE AS (SELECT 1) REPLACE INTO t_b8TmXJYj7 (c_NiVEveUN3c, c_mfOVVp6LJ, c_aegv) VALUES (68618957, 68124592, 69596440); INSERT OR IGNORE INTO t_b8TmXJYj7 (c_NiVEveUN3c, c_mfOVVp6LJ, c_aegv) VALUES (68255927, 69328195, 69129694), (167182449, 168788063, 169269878); INSERT OR IGNORE INTO t_b8TmXJYj7 (c_NiVEveUN3c, c_mfOVVp6LJ, c_aegv) SELECT 67849131, 68161280, 68664380; REPLACE INTO t_b8TmXJYj7 (c_NiVEveUN3c, c_mfOVVp6LJ, c_aegv) VALUES (66825107, 69562452, 69483783); REPLACE INTO t_b8TmXJYj7 (c_NiVEveUN3c, c_mfOVVp6LJ, c_aegv) SELECT 68023262, 67898560, 70447041; REPLACE INTO t_KVR (c_4fLRz, c_pLcd, c_0g82YslPQP, c_ZrDP) VALUES (67586788, 69007682, 'S5siRweQlWl_6962', 71249119), (167301749, 169075594, '2_16962', 170225481); INSERT OR IGNORE INTO t_KVR (c_4fLRz, c_pLcd, c_0g82YslPQP, c_ZrDP) VALUES (66661430, 68148925, 'KbS_6962', 71050733), (166965804, 169096064, '5zUuW4TZF_16962', 170277881); INSERT OR REPLACE INTO t_KVR (c_4fLRz, c_pLcd, c_0g82YslPQP, c_ZrDP) VALUES (67237374, 68315466, 'UOmHdDILWshcgJX8_6962', 70048725), (167018197, 168224093, 'ZsYHf9pHOvGcYmGHJvX_16962', 170517915); INSERT OR IGNORE INTO t_EiJ (c_SdSqONhoo, c_kRp, c_xy5FvRM, c_gjO9hafpB, c_KijMRW5dz, c_5t6reT, c_KZCXb, c_Le8nWz, c_6C2xHrvsC) SELECT -857142.38, -621000.925424, 69459049, 'wnb_7062', 71842715, 73589245, 72723476, 75427091, 76130032; INSERT OR IGNORE INTO t_EiJ (c_SdSqONhoo, c_kRp, c_xy5FvRM, c_gjO9hafpB, c_KijMRW5dz, c_5t6reT, c_KZCXb, c_Le8nWz, c_6C2xHrvsC) VALUES (-718855.102834, -629577.27261, 69368544, 'ZFjQt092_7062', 72490891, 71918416, 74314877, 74543671, 74652023); REPLACE INTO t_EiJ (c_SdSqONhoo, c_kRp, c_xy5FvRM, c_gjO9hafpB, c_KijMRW5dz, c_5t6reT, c_KZCXb, c_Le8nWz, c_6C2xHrvsC) VALUES (414704.108, 1048309.819191, 70128793, 'zOWaZFEHdu5iuu8iMtOz_7062', 72196568, 72447823, 72636705, 74091971, 75205132); INSERT OR REPLACE INTO t_EiJ (c_SdSqONhoo, c_kRp, c_xy5FvRM, c_gjO9hafpB, c_KijMRW5dz, c_5t6reT, c_KZCXb, c_Le8nWz, c_6C2xHrvsC) VALUES (-233902.57799999998, 802407.790856, 69815596, 'Gyf9GEFb_7062', 70691413, 72149888, 73938813, 73853273, 75565585); INSERT INTO t_EiJ DEFAULT VALUES;  SELECT * FROM ( SELECT * FROM (SELECT 1 AS col_c)  WHERE col_c IN (     SELECT (PERCENT_RANK() OVER()) FROM (VALUES (NULL)) ) ); SELECT t_EiJ.c_KijMRW5dz, t_EiJ.c_KZCXb, t_EiJ.c_kRp FROM t_EiJ ORDER BY t_EiJ.c_KijMRW5dz DESC LIMIT 10; SELECT *, CASE c_mfOVVp6LJ WHEN t_b8TmXJYj7.c_NiVEveUN3c THEN FALSE WHEN ROUND(t_b8TmXJYj7.c_mfOVVp6LJ, t_b8TmXJYj7.c_aegv) THEN (338681 IS NOT FALSE) ELSE - t_b8TmXJYj7.c_NiVEveUN3c END, *, t_b8TmXJYj7.c_aegv, * FROM t_b8TmXJYj7 ORDER BY 1;  SELECT DISTINCT t_EiJ.c_6C2xHrvsC,     COUNT(*) OVER (PARTITION BY t_EiJ.c_Le8nWz) as window_count,     RANK() OVER (ORDER BY CASE WHEN typeof(t_EiJ.c_6C2xHrvsC) IN ('null') THEN 0                              ELSE t_EiJ.c_6C2xHrvsC END DESC) as rank_val,     CASE WHEN t_EiJ.c_6C2xHrvsC IS NULL THEN 'Unknown' ELSE 'Known' END as status FROM t_EiJ WHERE t_EiJ.c_6C2xHrvsC IS NOT NULL GROUP BY t_EiJ.c_6C2xHrvsC, t_EiJ.c_Le8nWz HAVING COUNT(*) > 0 ORDER BY window_count DESC LIMIT 20;   SELECT t_EiJ.c_6C2xHrvsC,     t_EiJ.c_Le8nWz,     SUM(CASE WHEN typeof(t_EiJ.c_6C2xHrvsC) IN ('integer', 'real', 'numeric') THEN t_EiJ.c_6C2xHrvsC ELSE 0 END)          OVER (PARTITION BY t_EiJ.c_Le8nWz) as window_total FROM t_EiJ GROUP BY t_EiJ.c_6C2xHrvsC, t_EiJ.c_Le8nWz HAVING SUM(CASE WHEN typeof(t_EiJ.c_6C2xHrvsC) IN ('integer', 'real', 'numeric') THEN t_EiJ.c_6C2xHrvsC ELSE 0 END) > 0 ORDER BY window_total DESC LIMIT 10;   SELECT DISTINCT t_KVR.c_0g82YslPQP,     COUNT(*) OVER (PARTITION BY t_KVR.c_4fLRz) as window_count,     RANK() OVER (ORDER BY CASE WHEN typeof(t_KVR.c_0g82YslPQP) IN ('null') THEN 0                              ELSE t_KVR.c_0g82YslPQP END DESC) as rank_val,     CASE WHEN t_KVR.c_0g82YslPQP IS NULL THEN 'Unknown' ELSE 'Known' END as status FROM t_KVR WHERE t_KVR.c_0g82YslPQP IS NOT NULL GROUP BY t_KVR.c_0g82YslPQP, t_KVR.c_4fLRz HAVING COUNT(*) > 0 ORDER BY window_count DESC LIMIT 20;CREATE TABLE IF NOT EXISTS t_N96 (c_HoR4r6 REAL PRIMARY KEY NOT NULL DEFAULT NULL CHECK (c_HoR4r6 >= 0), c_Q8Vrr TEXT NOT NULL, c_8Y8Sjb NUMERIC, c_Ri8lD7pMcg NUMERIC NOT NULL, c_2mQB9Yl INTEGER NOT NULL DEFAULT -820692, UNIQUE (c_Ri8lD7pMcg, c_Q8Vrr, c_2mQB9Yl), FOREIGN KEY (c_8Y8Sjb) REFERENCES t_RyWsl(c_lmSDH)); REPLACE INTO t_N96 (c_HoR4r6, c_Q8Vrr, c_8Y8Sjb, c_Ri8lD7pMcg, c_2mQB9Yl) SELECT NULL, 'RLZY', -965036, 923225, 757290;CREATE TABLE V (l BOOLEAN UNIQUE UNIQUE, q BOOLEAN); INSERT INTO V SELECT * FROM (VALUES ((NOT NULL), false), (NULL, NULL)) AS A WHERE ((false <> true) <> (NOT true)); SELECT * FROM V AS K WHERE (NOT (((+146) + 52) < ((58 - 255) - ((18 * 82) / (+47))))); CREATE TABLE t2 (c0 REAL PRIMARY KEY, c1 BOOLEAN, c2 NUMERIC, c3 DATE, c4 BLOB, c5 NONE); INSERT INTO t2 VALUES(93.170000000000001705,0,24.070000000000000284,'1970-01-01',X'03083a1246',NULL); INSERT INTO t2 VALUES(-60.240000000000001991,1,0,'2020-09-25',X'2161577f407b48',NULL);  SELECT * FROM t2 WHERE c0 LIKE (SELECT c0 FROM (SELECT * FROM t2) WHERE c0 IS NOT NULL);CREATE TABLE T1(c1 JSON, c2 INT, c3 REAL); CREATE TABLE T2(c1 NUMERIC NOT NULL DEFAULT NULL, c2 NUMERIC); CREATE TABLE T3(c1 REAL, c2 REAL, c3 TEXT); SELECT (SELECT ROW_NUMBER() OVER (ORDER BY c.c2) FROM T3 LIMIT 1), DENSE_RANK() OVER (ORDER BY a.c2) FROM T1 AS a INNER JOIN T2 AS b ON a.c1 = b.c2 INNER JOIN T3 AS c ON b.c1 = c.c2 WHERE a.c2 > c.c2 AND b.c1 > a.c1 GROUP BY a.c2;CREATE TABLE t0 (c0 UNSIGNED BIG INT PRIMARY KEY, c1 CLOB, c2 BOOLEAN, c3 REAL, c4 REAL, c5 INT); CREATE TABLE t3 (c0 DOUBLE PRECISION PRIMARY KEY, c1 DATE, c2 BLOB, c3 BIGINT, c4 CLOB, c5 TEXT, c6 TEXT, c7 NCHAR); INSERT INTO t3 VALUES(65.879999999999995451,'2023-02-18',X'66496f6d357f451f5b',-1448950359,'ScYFw','MQMEeTEjn','woPQCvy!','ISC58'); INSERT INTO t3 VALUES(-43.920000000000001703,'2010-03-07',X'546c24177b30',499833323,'mLZW_KO71?','rW!ojjpBJYz!z','ujmHFW','WdX1!e'); CREATE TABLE t5 (c0 CHARACTER PRIMARY KEY, c1 MEDIUMINT, c2 CHARACTER); INSERT INTO t5 VALUES('7bxI8',941795,'WP9UO'); INSERT INTO t5 VALUES('_JB5-Z!',-2877915,'dD0J0N-77?0Uo1e ,'); INSERT INTO t5 VALUES('Q_YOxU o',4636258,'Z_SRJld5gVFP'); INSERT INTO t5 VALUES('mNlEgKF2!',-584367,'wx_TvWXV'); INSERT INTO t5 VALUES('CuA1emC-R',1509128,'MDhbR RClrvKHOzN'); INSERT INTO t5 VALUES('mFCgpHaC-_',3353807,'usA8w_mSpY?_ TL'); INSERT INTO t5 VALUES('v,v77liG',4349642,'DXPmTZ.P2!Kx'); INSERT INTO t5 VALUES('crx8flX,g02DPmA',-1990450,'8GrbC9U_7Xhk'); INSERT INTO t5 VALUES('G-.Xe7',684380,'UrnRAA2g3VUV3 '); INSERT INTO t5 VALUES('Q9AVRo28eIMSq',3937253,'9l4xWb.nvV?BgZ4c'); INSERT INTO t5 VALUES('9pYLxycVQp6B',2005450,',?!lycuysWJ'); INSERT INTO t5 VALUES('tHF9J0B9',-5586608,'z.jePZ7T-'); INSERT INTO t5 VALUES('FawzS_iRS82M',-5313409,'JqWLoScb'); INSERT INTO t5 VALUES('20EMpwWKwVfC8',7771574,'e65r1Y'); INSERT INTO t5 VALUES('Tz_CJnPo7,BwVipSd',2940263,'QtbpQ?E1w4Z.HCxWFM!'); INSERT INTO t5 VALUES('kya9nkIDJqikr9',6088621,'NuK?YToc7mCYQ6FBZo'); INSERT INTO t5 VALUES('j_jxija',-2685025,' QedKsQ_yLuMR.Y'); INSERT INTO t5 VALUES('05ytv3iYVR4iSWbaJ3da',-6561348,'sJG9T0M'); INSERT INTO t5 VALUES('z2p_pAo_DI8FfutF0',-1470225,'ZhJicQ'); INSERT INTO t5 VALUES('de GCJAmNWk1do7XAN?J',6645446,'Z_WaSBSPcXmzWvDYb!k'); INSERT INTO t5 VALUES('LSYOD5bxRq3.',2778922,'vbB6VDNCblDJ5D!fLvf'); INSERT INTO t5 VALUES('KUJR-z6b72tA,5j',3359107,'?1mic'); INSERT INTO t5 VALUES('bT-Nxqsh',-1028521,'g2SsLta,KC fnlM!EITo'); INSERT INTO t5 VALUES('?m9n_o',-5416584,'o2QDi5yH!b'); INSERT INTO t5 VALUES('Dr2T2W2',-8072188,'Vut!Zi4?'); INSERT INTO t5 VALUES('tfU3oMigZU1ZvvCdAmU6',5315105,'t-Vazhk'); INSERT INTO t5 VALUES('xXF-q2Re',-8369543,'fJ8_HW7Lf'); INSERT INTO t5 VALUES('tD5dr NbhE',83100,'2!mmVhgBRvs'); INSERT INTO t5 VALUES('5QC6bWkkO?i',1579836,'LH-Jz G'); INSERT INTO t5 VALUES('!A1rZ5g!-HGDXSvct',930168,'yIioLV'); INSERT INTO t5 VALUES('mKUBXhc6m3D- cn',-901863,'pnscE'); INSERT INTO t5 VALUES('Z43,OzKdAwr',8124048,'-p0kCOmOi4iLdqHsqKS'); INSERT INTO t5 VALUES('dthFdZTo',5302984,'M!x_f1QuMqSo'); INSERT INTO t5 VALUES('3E75kVioit ,',3912383,'UiE5FLuqN6'); INSERT INTO t5 VALUES('V?KxKy2FWQJ7deO!sb?f',5112056,'LRsV3glE4Y?'); INSERT INTO t5 VALUES('MV6H7EW,4-Q',500598,'iKbYn4mYe.mz6H!OfRi'); INSERT INTO t5 VALUES('wZfDq2b1t8',-5392615,'?XZp.GNkqxYR4'); INSERT INTO t5 VALUES('gcam8ECh9GLNzzO?',7774759,'MU3s2fK'); INSERT INTO t5 VALUES('dG8_2O__cSqB.3',-5546456,'z2,o9Fp.q6fRfJ'); INSERT INTO t5 VALUES('7tiG-YFjdHP9D9',-7571907,'Zi9ZSyH5cf'); INSERT INTO t5 VALUES('mgpktsi4IpsLnYx.E',-4702394,'b?S1ByB'); INSERT INTO t5 VALUES('g,hfFbNR5bj8',7183365,'UZ8UbhVw'); INSERT INTO t5 VALUES('7F!RBnoVKjtoHe',2331711,'1WwsZBVWCcExLv5ng?'); INSERT INTO t5 VALUES('hotMtf6t0krxmxWsiTji',2670615,'x!rFa,jbG 4Kg59oz4dL'); WITH              t1_stats AS (                 SELECT c1,                      COUNT(*) as count,                     AVG(c0) as avg_pk                 FROM t5                 GROUP BY c1             ),             t2_derived AS (                 SELECT c0, c3,                     CASE                          WHEN c3 IS NULL THEN 'Unknown'                         WHEN c3 < 50 THEN 'Low'                         ELSE 'High'                     END as category                 FROM t3             )             SELECT main.*,                  (SELECT AVG(count) FROM t1_stats) as overall_avg,                 (                     SELECT COUNT(*) FROM (                         SELECT t3.c0,                                  LAG(t3.c4) OVER(ORDER BY t3.c0) as prev_val,                                 LEAD(t3.c4) OVER(ORDER BY t3.c0) as next_val                         FROM t0 t3                         WHERE t3.c0 IN (                             SELECT td.c0 FROM t2_derived td                             WHERE td.category = main.category                             UNION                             SELECT ts.avg_pk FROM t1_stats ts                             WHERE ts.c1 = main.c1                         )                     ) complex_window                     WHERE complex_window.prev_val IS NOT NULL                     OR complex_window.next_val IS NOT NULL                 ) as window_matches             FROM (                 SELECT ts.c1, td.category,                     ts.count, ts.avg_pk,                     DENSE_RANK() OVER(PARTITION BY td.category ORDER BY ts.count DESC) as rank_in_category                 FROM t1_stats ts                 CROSS JOIN (                     SELECT DISTINCT category FROM t2_derived                 ) td             ) main             WHERE main.rank_in_category <= 2             ORDER BY main.category, main.rank_in_category;CREATE TABLE T1(c1 REAL, c2 JSON, c3 REAL NOT NULL DEFAULT NULL); CREATE TABLE T2(c1 JSON); CREATE TABLE T3(c1 NUMERIC, c2 BLOB); INSERT INTO T1(c1, c2, c3) VALUES (933, '{\"k\": 4}', -131); INSERT INTO T3(c1, c2) VALUES (564, 406); SELECT DISTINCT c.c2, b.c1, 491 FROM T1 AS a LEFT JOIN T2 AS b ON a.c3 = b.c1 LEFT JOIN T3 AS c ON b.c1 = c.c2 WHERE c.c1 > a.c3;CREATE TABLE t0 (             c0 BOOLEAN,             c1 BLOB,             c2 INTEGER,             c3 INTEGER         );         WITH cte0 AS (         SELECT COALESCE(t4.c0, CAST(t9.c1 AS BLOB), NULLIF(t11.c0, t9.c0), t4.c3, t5.c1) AS c4, like(NULL,FALSE) AS c5, t11.c3 AS c6, t5.c0 AS c7, t5.c1 AS c8, t9.c0 AS c9, t2.c3 AS c10, t11.c3 AS c11,           CASE t11.c1 WHEN t9.c1 = t3.c1 THEN t2.c1                ELSE IFNULL(X'4534f90f', t3.c1)           END AS c12, t10.c0 AS c13, t10.c1 AS c14, t9.c0 AS c15, t6.c0 AS c16          FROM t0 AS t1             LEFT JOIN (             t0 AS t2                LEFT JOIN t0 AS t3                 ON (t2.c3 IS NULL)               INNER JOIN (               t0 AS t4                INNER JOIN t0 AS t5                 ON (t4.c3 = t5.c2)      )                ON (t3.c2 = t5.c2)              INNER JOIN t0 AS t6               ON (t3.c2 = t6.c2)    )              ON (t1.c0 <> t2.c0)            LEFT JOIN (            t0 AS t7               INNER JOIN t0 AS t8                ON (t8.c2 IS NOT NULL)              INNER JOIN (              t0 AS t9               INNER JOIN t0 AS t10                ON (t10.c3 <= t10.c3)     )               ON (false)             INNER JOIN t0 AS t11              ON (t10.c2 IS NULL)   )             ON (true)          WHERE t11.c3 = t11.c3          ORDER BY c16 COLLATE NOCASE, c9          LIMIT 984787926489729537 OFFSET 3177233916585467417         ), cte1 AS (         SELECT t12.c3 AS c8, t12.c2 AS c9,           CASE WHEN t12.c2 < t12.c2 THEN subq0.c5                ELSE subq0.c5           END AS c10, t12.c3 AS c11, t12.c2 AS c12, t12.c2 AS c13, t12.c3 AS c14, subq0.c5 AS c15, t12.c1 AS c16          FROM t0 AS t12             CROSS JOIN t0 AS t13              ON (true)            LEFT JOIN (SELECT t14.c3 AS c4, t14.c3 AS c5, t14.c0 AS c6, t14.c1 AS c7              FROM t0 AS t14              WHERE t14.c1 <> t14.c1              ORDER BY c7 ASC              LIMIT 4363772089824810580 ) as subq0             ON (false)          WHERE           CASE subq0.c5 WHEN subq0.c6 IS NOT NULL THEN t13.c3                WHEN t13.c0 <>            CASE t13.c0 WHEN subq0.c4 = t12.c3 THEN subq0.c6                 WHEN subq0.c7 = t13.c1 THEN subq0.c6                 WHEN CAST(t13.c1 AS BOOLEAN) IS NULL AND t13.c3 = subq0.c5 THEN t13.c0                 WHEN likelihood(NULL,0.021238) <= subq0.c5 THEN subq0.c6                 ELSE subq0.c6            END THEN t12.c3                WHEN t13.c0 <> t12.c0 THEN subq0.c5                WHEN subq0.c7 > t12.c1 OR 36 > t13.c3 AND 96 = t12.c2 THEN subq0.c4                WHEN t13.c3 > subq0.c5 THEN subq0.c5                WHEN t12.c2 <= t13.c3 THEN t13.c2                WHEN false THEN subq0.c5                ELSE subq0.c5           END >= subq0.c5 AND true OR t13.c0 = subq0.c6 OR subq0.c5 IS NULL AND t12.c0 = FALSE OR COALESCE(t12.c2, t12.c2, t13.c2, t13.c3) >= CAST(subq0.c6 AS TEXT)          ORDER BY c8, c14 COLLATE NOCASE         ), cte2 AS (         SELECT t15.c3 AS c4, t15.c3 AS c5, t15.c0 AS c6, t15.c0 AS c7, t15.c3 AS c8, t15.c2 AS c9,           CASE t15.c1 WHEN false OR t15.c1 IS NULL AND            CASE t15.c0 WHEN t15.c0 IS NULL AND t15.c3 <> like(NULL,'text20') THEN t15.c0                 WHEN true AND t15.c1 = CAST(t15.c0 AS BLOB) THEN t15.c0                 WHEN t15.c3 IS NULL THEN t15.c0                 WHEN t15.c3 >= t15.c3 OR EXISTS (             SELECT 33 AS c4, t16.c2 AS c5              FROM t0 AS t16              WHERE t16.c3 < t16.c2              ORDER BY c4 COLLATE RTRIM DESC              LIMIT 6121260869267060666 OFFSET 4911288594628582095             ) THEN t15.c0                 WHEN CAST(t15.c2 AS BLOB) >= t15.c3 THEN t15.c0                 WHEN true AND 3 >= t15.c2 THEN             CASE WHEN t15.c2 >= t15.c3 THEN t15.c0                  ELSE t15.c0             END                 ELSE t15.c0            END <>            CASE WHEN t15.c2 IS NOT NULL THEN t15.c0                 ELSE t15.c0            END AND t15.c1 >= t15.c1 OR t15.c2 < t15.c3 AND t15.c2 = t15.c2 THEN t15.c1                WHEN t15.c2 > t15.c2 THEN X'b6f6af76'                WHEN t15.c3 < t15.c2 AND true THEN t15.c1                WHEN t15.c3 >= t15.c3 THEN t15.c1                WHEN t15.c3 >= t15.c3 THEN t15.c1                WHEN t15.c0 = t15.c0 THEN t15.c1                WHEN t15.c0 <> t15.c0 THEN t15.c1                WHEN 73 <= t15.c3 THEN            CASE t15.c1 WHEN t15.c2 = t15.c3 OR true AND t15.c1 <> t15.c1 THEN t15.c1                 WHEN t15.c0 IS NULL THEN t15.c1                 WHEN t15.c1 <> t15.c1 THEN t15.c1                 WHEN false THEN t15.c1                 ELSE t15.c1            END                WHEN t15.c1 >= CAST(t15.c3 AS BLOB) AND false THEN t15.c1                WHEN X'5f84e29d' <= t15.c1 OR t15.c3 <= t15.c3 AND            CASE WHEN EXISTS (             SELECT t18.c1 AS c4, t19.c0 AS c5, t18.c2 AS c6, t17.c2 AS c7, t19.c2 AS c8              FROM t0 AS t17                 INNER JOIN t0 AS t18                  ON (t17.c1 = t18.c1)                CROSS JOIN t0 AS t19                 ON (t18.c3 IS NULL)              WHERE t19.c3 < t18.c2 OR t19.c0 <> t19.c0 AND t19.c2 <> t19.c3              ORDER BY c6, c4 ASC, c7 ASC              LIMIT 6987904410604623467             ) THEN t15.c0                 ELSE CAST(t15.c1 AS TEXT)            END = t15.c0 THEN COALESCE(t15.c0,             CASE WHEN t15.c0 <> t15.c0 THEN NULL                  ELSE NULL             END)                WHEN glob(X'428f5591',TRUE) > t15.c3 THEN            CASE WHEN t15.c0 = COALESCE(t15.c0, t15.c0, t15.c3, t15.c0, t15.c3, t15.c0) THEN t15.c1                 ELSE t15.c1            END                WHEN t15.c1 > t15.c1 OR t15.c3 = t15.c3 OR t15.c3 < 44 THEN t15.c1                ELSE            CASE t15.c1 WHEN t15.c2 IS NULL AND false THEN t15.c1                 WHEN t15.c3 > t15.c2 AND t15.c2 >= t15.c2 THEN t15.c1                 WHEN t15.c0 IS NULL AND t15.c3 =             CASE WHEN t15.c2 >= t15.c3 THEN t15.c3                  ELSE t15.c3             END AND EXISTS (             SELECT t20.c2 AS c4, t20.c2 AS c5, t20.c1 AS c6, t20.c2 AS c7              FROM t0 AS t20              WHERE false              ORDER BY c6, c7, c6             ) OR t15.c0 <> t15.c0 AND t15.c3 >= t15.c3 AND t15.c0 <> t15.c0 THEN t15.c1                 WHEN t15.c0 IS NOT NULL THEN t15.c1                 WHEN t15.c3 >= t15.c3 AND false OR t15.c3 IS NULL OR true AND false AND t15.c0 = t15.c0 THEN t15.c1                 WHEN t15.c2 < COALESCE(TRUE,              CASE WHEN t15.c1 >= t15.c1 AND t15.c3 < t15.c2 OR t15.c3 > t15.c2 THEN CAST(t15.c0 AS INTEGER)                   ELSE NULL              END, t15.c3, t15.c2, t15.c3, t15.c2) THEN t15.c1                 WHEN             CASE t15.c1 WHEN EXISTS (              SELECT t22.c1 AS c4, t21.c1 AS c5               FROM t0 AS t21                 INNER JOIN t0 AS t22                  ON (true)               WHERE FALSE IS NULL               ORDER BY c5, c4               LIMIT 8935439260303621600              ) THEN t15.c1                  WHEN t15.c2 <> t15.c3 THEN t15.c1                  ELSE t15.c1             END <> t15.c1 THEN t15.c1                 WHEN EXISTS (             SELECT t23.c3 AS c4, t23.c2 AS c5              FROM t0 AS t23              WHERE t23.c2 <> t23.c2 AND X'b1d0c660' > t23.c1 AND t23.c3 IS NULL AND t23.c3 >= t23.c2              ORDER BY c4 COLLATE NOCASE             ) THEN             CASE t15.c1 WHEN t15.c0 <> FALSE THEN X'fd4fea72'                  WHEN t15.c1 <> t15.c1 OR t15.c0 = t15.c0 AND              CASE WHEN t15.c3 = t15.c2 THEN t15.c3                   ELSE t15.c3              END > t15.c3 OR t15.c0 <> t15.c0 AND t15.c2 IS NOT NULL AND t15.c2 < t15.c3 AND t15.c1 IS NULL THEN t15.c1                  WHEN false THEN t15.c1                  WHEN t15.c1 <> t15.c1 THEN t15.c1                  WHEN t15.c1 = t15.c1 THEN t15.c1                  WHEN t15.c3 = t15.c2 THEN t15.c1                  ELSE t15.c1             END                 ELSE t15.c1            END           END AS c6, t15.c2 AS c7          FROM t0 AS t15          WHERE t15.c0 <> FALSE          ORDER BY c7          LIMIT 3145780324746856724         ), cte3 AS (         SELECT t26.c2 AS c4, t26.c1 AS c5, subq1.c4 AS c6, subq2.c5 AS c7, subq1.c6 AS c8          FROM (SELECT t24.c3 AS c4, t24.c0 AS c5, t24.c0 AS c6, t24.c1 AS c7, t24.c1 AS c8              FROM t0 AS t24              WHERE t24.c0 <> t24.c0              ORDER BY c6 ASC              LIMIT 2532018708546537331 OFFSET 1232015651327623920) as subq1            LEFT JOIN (            (SELECT t25.c1 AS c4, t25.c3 AS c5               FROM t0 AS t25               WHERE t25.c3 = t25.c2               ORDER BY c5 DESC, c5 ASC, c5, c4 COLLATE NOCASE DESC, c4) as subq2             LEFT JOIN t0 AS t26              ON (false)   )             ON (likely( NULL) >= subq2.c5)          WHERE t26.c2 <>           CASE WHEN subq2.c4 <> X'1c8e3c51' OR subq2.c5 = t26.c3 THEN subq1.c4                ELSE 29           END          ORDER BY c6 ASC, c6, c4         ), cte4 AS (         SELECT t27.c0 AS c4          FROM t0 AS t27          WHERE EXISTS (           SELECT t29.c0 AS c4, t29.c1 AS c5, t28.c3 AS c6, t28.c1 AS c7, instr(TRUE,X'8395442e') AS c8            FROM t0 AS t28              INNER JOIN t0 AS t29               ON (t28.c0 = t28.c0)            WHERE t29.c0 IS NOT NULL OR t28.c1 IS NULL            ORDER BY c8, c6, c5            LIMIT 4828279198547278562 OFFSET 6720961285169446335           )          ORDER BY c4 DESC          LIMIT 8798543568268684072         ), cte5 AS (         SELECT subq3.c4 AS c5, subq3.c4 AS c6          FROM (SELECT t31.c2 AS c4             FROM t0 AS t30               LEFT JOIN t0 AS t31                ON (t31.c3 > t30.c3)             WHERE t30.c2 > t30.c3             ORDER BY c4) as subq3          WHERE subq3.c4 < subq3.c4          ORDER BY c5 ASC, c6 ASC, c6, c6 COLLATE NOCASE, c6 DESC          LIMIT 6934518183931425302 OFFSET 4889192710036676453         ), cte6 AS (         SELECT changes() AS c4          FROM t0 AS t32          WHERE EXISTS (           SELECT subq4.c6 AS c7, subq4.c5 AS c8            FROM (SELECT t33.c0 AS c4, t33.c0 AS c5, t33.c0 AS c6               FROM t0 AS t33               WHERE t33.c1 <> t33.c1 AND t33.c1 IS NOT NULL               ORDER BY c4, c5 ASC               LIMIT 4341955145835816642 OFFSET 6168886671401952516) as subq4            WHERE subq4.c5 <> subq4.c5 OR false OR subq4.c5 <> subq4.c4            ORDER BY c7 ASC, c8, c8 DESC, c7, c8 DESC            LIMIT 2436938149920978479 OFFSET 3806792540028576091           )          ORDER BY c4, c4, c4, c4, c4 ASC          LIMIT 1495297699718987670         ), cte7 AS (         SELECT subq5.c8 AS c10, X'8ae13f1c' AS c11, subq5.c5 AS c12, subq5.c8 AS c13          FROM (SELECT t34.c2 AS c4, t35.c1 AS c5, t35.c1 AS c6, t34.c0 AS c7, t34.c1 AS c8, t35.c3 AS c9             FROM t0 AS t34               LEFT JOIN t0 AS t35                ON (false)             WHERE t34.c1 > t35.c1             ORDER BY c5 DESC, c5 ASC             LIMIT 784438155366877240 OFFSET 6555875086290180906) as subq5          WHERE subq5.c5 >= subq5.c8          ORDER BY c12, c12          LIMIT 9160030243326398414 OFFSET 6560140355752991108         ), cte8 AS (         SELECT CAST(subq6.c4 AS INTEGER) AS c6, subq6.c4 AS c7          FROM (SELECT t36.c3 AS c4, t36.c2 AS c5             FROM t0 AS t36               INNER JOIN (               t0 AS t37                LEFT JOIN t0 AS t38                 ON (t37.c2 <> t38.c3)      )                ON (t38.c0 = FALSE AND t36.c3 <> t38.c2 OR true)             WHERE false AND t36.c3 = t36.c3             ORDER BY c4 ASC, c4 ASC) as subq6          WHERE subq6.c5 <= subq6.c5          ORDER BY c6, c7, c7 DESC, c6 ASC, c7          LIMIT 7887725421566407498         ), cte9 AS (         SELECT t39.c3 AS c4, t39.c0 AS c5          FROM t0 AS t39          WHERE t39.c0 = t39.c0          ORDER BY c4 COLLATE RTRIM, c5 ASC, c5, c4 COLLATE BINARY, c4 COLLATE NOCASE DESC         ), cte10 AS (         SELECT           CASE subq7.c33 WHEN            CASE subq7.c10 WHEN subq7.c30 = subq7.c14 OR subq7.c11 IS NULL THEN subq7.c10                 WHEN subq7.c17 < subq7.c41 THEN subq7.c13                 WHEN EXISTS (             SELECT t43.c0 AS c4, t42.c3 AS c5, t42.c2 AS c6, t43.c0 AS c7, t42.c3 AS c8, t43.c3 AS c9, t43.c2 AS c10, t43.c3 AS c11, t42.c2 AS c12, t43.c0 AS c13, t43.c1 AS c14, t42.c0 AS c15, t43.c2 AS c16, t43.c0 AS c17, t42.c0 AS c18, t43.c1 AS c19, t42.c2 AS c20, t43.c2 AS c21              FROM t0 AS t42                INNER JOIN t0 AS t43                 ON (t42.c3 = t43.c2)              WHERE EXISTS (               SELECT t44.c0 AS c4, X'd9b6da2e' AS c5, t44.c1 AS c6, t44.c0 AS c7, t44.c0 AS c8, t44.c2 AS c9, t44.c3 AS c10, t44.c2 AS c11, t44.c2 AS c12, t44.c3 AS c13, t44.c2 AS c14, t44.c0 AS c15, t44.c1 AS c16, t44.c0 AS c17, t44.c2 AS c18                FROM t0 AS t44                WHERE EXISTS (                 SELECT t45.c0 AS c4, t45.c1 AS c5, t45.c3 AS c6, t45.c1 AS c7, t45.c3 AS c8, t45.c1 AS c9, t45.c2 AS c10, t45.c1 AS c11                  FROM t0 AS t45                  WHERE t45.c2 <> t45.c2                  ORDER BY c9, c4                 )                ORDER BY c11, c5 COLLATE NOCASE, c16                LIMIT 5809126036781140600               ) OR t42.c1 < t43.c1              ORDER BY c15, c4 COLLATE BINARY             ) THEN subq7.c36                 WHEN false THEN subq7.c21                 WHEN subq7.c32 >= subq7.c24 THEN subq7.c28                 WHEN true THEN subq7.c26                 ELSE subq7.c39            END <> subq7.c28 THEN subq7.c41                WHEN subq7.c14 IS NOT NULL THEN X'a8bba556'                WHEN false THEN subq7.c27                WHEN false THEN subq7.c33                WHEN subq7.c5 = subq7.c13 THEN X'da50acdc'                WHEN subq7.c14 <> subq7.c30 AND subq7.c32 IS NOT NULL OR X'90aeec69' > subq7.c33 THEN IFNULL(subq7.c9, subq7.c17)                ELSE subq7.c16           END AS c12,           CASE WHEN false THEN subq7.c27                ELSE subq7.c6           END AS c13, subq7.c27 AS c14, subq7.c14 AS c15, subq7.c21 AS c16, subq7.c29 AS c17, subq7.c17 AS c18,           CASE subq7.c41 WHEN subq7.c11 > subq7.c10 THEN subq7.c34                WHEN subq7.c13 >= subq7.c19 THEN X'dfb306d9'                WHEN subq7.c27 > subq7.c34 THEN subq7.c41                WHEN subq7.c30 = subq7.c29 THEN subq7.c9                WHEN subq7.c33 <> subq7.c4 THEN subq7.c16                WHEN false THEN            CASE subq7.c41 WHEN subq7.c4 IS NOT NULL THEN subq7.c38                 WHEN subq7.c26 <> subq7.c32 AND subq7.c34 > subq7.c17 THEN subq7.c9                 WHEN subq7.c32 <= subq7.c8 THEN subq7.c20                 ELSE subq7.c20            END                WHEN subq7.c22 <> subq7.c5 THEN subq7.c9                WHEN subq7.c41 <= X'395594fc' OR 2 < subq7.c15 THEN subq7.c6                ELSE subq7.c38           END AS c19, subq7.c26 AS c20, subq7.c26 AS c21, subq7.c35 AS c22, subq7.c37 AS c23          FROM (SELECT t40.c1 AS c4, t40.c3 AS c5, t40.c1 AS c6, t40.c3 AS c7, t40.c3 AS c8, t40.c1 AS c9, t40.c3 AS c10, t40.c2 AS c11,              CASE t40.c0 WHEN t40.c0 = t40.c0 THEN t40.c0                   WHEN CAST(t40.c2 AS INTEGER) IS NULL THEN t40.c0                   ELSE t40.c0              END AS c12, t40.c2 AS c13, t40.c0 AS c14, t40.c3 AS c15, CAST(t40.c0 AS BOOLEAN) AS c16, t40.c1 AS c17, t40.c0 AS c18, t40.c3 AS c19, t40.c1 AS c20, t40.c2 AS c21, t40.c3 AS c22, t40.c3 AS c23, t40.c2 AS c24, t40.c3 AS c25, NULLIF(t40.c3, t40.c3) AS c26, CAST(t40.c0 AS TEXT) AS c27, t40.c2 AS c28, t40.c0 AS c29, t40.c0 AS c30, t40.c0 AS c31, t40.c2 AS c32, t40.c1 AS c33, t40.c1 AS c34, t40.c3 AS c35, t40.c2 AS c36, t40.c0 AS c37, t40.c1 AS c38, t40.c3 AS c39, t40.c2 AS c40, t40.c1 AS c41             FROM t0 AS t40             WHERE t40.c3 >= 51 AND t40.c2 <> t40.c3 OR EXISTS (              SELECT t41.c1 AS c4, t41.c1 AS c5, t41.c2 AS c6, t41.c0 AS c7               FROM t0 AS t41               WHERE true               ORDER BY c6, c5, c4               LIMIT 1516166502531311827 OFFSET 3589648532708247829              )             ORDER BY c41             LIMIT 7624497011460768375 ) as subq7          WHERE 27 = subq7.c21          ORDER BY c23, c16 DESC, c20         ), cte11 AS (         SELECT subq8.c5 AS c4, t47.c1 AS c5, subq8.c4 AS c6          FROM (SELECT t46.c3 AS c4, t46.c0 AS c5              FROM t0 AS t46              WHERE true              ORDER BY c4 COLLATE BINARY ASC, c4 DESC              LIMIT 9126758867602662757 ) as subq8            LEFT JOIN t0 AS t47             ON (subq8.c4 IS NOT NULL)          WHERE t47.c2 <           CASE WHEN t47.c3 < t47.c3 THEN subq8.c4                ELSE 60           END AND EXISTS (           SELECT t48.c0 AS c4, t48.c2 AS c5, t48.c0 AS c6, t49.c0 AS c7            FROM t0 AS t48              LEFT JOIN t0 AS t49               ON (t48.c1 <= t49.c1)            WHERE EXISTS (             SELECT t50.c0 AS c4              FROM t0 AS t50              WHERE EXISTS (               SELECT t51.c2 AS c4                FROM t0 AS t51                WHERE t51.c1 <= t51.c1 OR false OR t51.c1 = t51.c1                ORDER BY c4               )              ORDER BY c4, c4 ASC, c4, c4 COLLATE RTRIM, c4 COLLATE RTRIM ASC              LIMIT 2654765777187074528 OFFSET 3724706489530633255             )            ORDER BY c5 DESC, c7 ASC, c5            LIMIT 2254513205670203618 OFFSET 6340427620702674737           ) OR EXISTS (           SELECT t52.c1 AS c4, t52.c3 AS c5            FROM t0 AS t52            WHERE t52.c3 > t52.c2 OR t52.c1 >= CAST(t52.c0 AS BLOB) OR t52.c2 < t52.c3 AND t52.c3 <> t52.c3            ORDER BY c5 ASC            LIMIT 6071630205145395608 OFFSET 2729188623890119843           ) AND true OR EXISTS (           SELECT t53.c0 AS c4, t53.c3 AS c5, t53.c2 AS c6, t53.c2 AS c7,             CASE t53.c1 WHEN t53.c2 <> t53.c3 OR t53.c3 IS NOT NULL THEN t53.c1                  WHEN 24 = t53.c3 THEN t53.c1                  WHEN t53.c0 <> t53.c0 AND t53.c2 = t53.c2 THEN t53.c1                  WHEN CAST(t53.c1 AS BOOLEAN) = t53.c0 THEN t53.c1                  WHEN t53.c0 <> t53.c0 THEN t53.c1                  WHEN IFNULL(t53.c1, t53.c1) > t53.c1 AND 15 IS NULL AND t53.c1 > t53.c1 THEN t53.c1                  WHEN t53.c0 <> t53.c0 OR t53.c0 <> t53.c0 OR              CASE t53.c2 WHEN t53.c0 = t53.c0 THEN               CASE WHEN t53.c1 = t53.c1 THEN t53.c2                    ELSE t53.c3               END                   WHEN true THEN t53.c2                   WHEN t53.c0 <> t53.c0 THEN t53.c3                   WHEN t53.c2 > t53.c2 THEN t53.c3                   WHEN EXISTS (               SELECT t54.c2 AS c4                FROM t0 AS t54                WHERE t54.c2 <> t54.c2                ORDER BY c4                LIMIT 4592403434843744147               ) AND t53.c1 = t53.c1 THEN t53.c2                   WHEN X'b28b11ef' >= t53.c1 THEN t53.c2                   WHEN t53.c0 IS NOT NULL THEN t53.c3                   ELSE t53.c3              END > t53.c3 THEN t53.c1                  WHEN t53.c0 IS NOT NULL THEN t53.c1                  WHEN t53.c3 <= t53.c3 AND t53.c2 < t53.c3 THEN t53.c1                  ELSE t53.c1             END AS c5, zeroblob( 9) AS c6,             CASE t53.c0 WHEN nullif('text99',NULL) IS NOT NULL THEN t53.c0                  WHEN t53.c2 > t53.c3 OR t53.c2 <= t53.c3 THEN t53.c0                  WHEN EXISTS (              SELECT t55.c2 AS c4, t56.c1 AS c5, t56.c1 AS c6, t56.c3 AS c7, t55.c2 AS c8, t55.c2 AS c9               FROM t0 AS t55                 INNER JOIN t0 AS t56                  ON (t55.c2 = t56.c2)               WHERE t55.c3 >= t56.c3               ORDER BY c6, c5              ) THEN t53.c0                  WHEN t53.c0 = t53.c0 OR t53.c0 <> t53.c0 THEN FALSE                  WHEN t53.c3 > t53.c3 THEN COALESCE(t53.c3, TRUE, t53.c0)                  WHEN t53.c0 = t53.c0 OR t53.c3 <= t53.c2 THEN t53.c0                  WHEN t53.c1 < t53.c1 THEN t53.c0                  WHEN t53.c2 <> t53.c3 AND t53.c3 < t53.c3 OR t53.c0 = t53.c0 THEN t53.c0                  ELSE t53.c0             END AS c10, t53.c3 AS c11, t53.c0 AS c12, t53.c3 AS c13, t53.c3 AS c14, t53.c1 AS c15, t53.c3 AS c16            FROM t0 AS t53            WHERE t53.c2 <> t53.c2 AND t53.c0 <> t53.c0            ORDER BY c13 DESC, c13 DESC, c4 ASC           ) OR 56 = subq8.c4 AND t47.c1 >= t47.c1          ORDER BY c6         ), cte12 AS (         SELECT t57.c2 AS c4          FROM t0 AS t57          WHERE t57.c1 IS NULL AND t57.c2 >= t57.c3 OR t57.c2 IS NULL OR           CASE t57.c2 WHEN EXISTS (            SELECT t58.c2 AS c4             FROM t0 AS t58             WHERE t58.c3 < t58.c3             ORDER BY c4 ASC             LIMIT 2524194830875506617 OFFSET 1025691471528465556            ) THEN t57.c2                WHEN t57.c3 = t57.c3 THEN t57.c3                WHEN            CASE WHEN t57.c0 = t57.c0 THEN t57.c3                 ELSE t57.c3            END >= CAST(t57.c3 AS BOOLEAN) THEN t57.c3                WHEN 46 >= t57.c3 THEN t57.c2                ELSE t57.c3           END <= t57.c3          ORDER BY c4          LIMIT 552948462492477691 OFFSET 6395012827043578859         )SELECT subq10.c17 AS c8, subq10.c16 AS c9, subq10.c15 AS c10, subq10.c16 AS c11, subq10.c14 AS c12, subq10.c17 AS c13          FROM (SELECT subq9.c8 AS c14, subq9.c11 AS c15, TRUE AS c16, subq9.c10 AS c17             FROM (SELECT t59.c3 AS c4, t60.c0 AS c5, t59.c3 AS c6, t59.c0 AS c7, t59.c2 AS c8, t60.c0 AS c9, t59.c0 AS c10, t60.c1 AS c11, t59.c3 AS c12, t59.c1 AS c13                FROM t0 AS t59                  LEFT OUTER JOIN t0 AS t60                   ON (t59.c3 IS NOT NULL)                WHERE t59.c3 > t59.c2                ORDER BY c12 COLLATE NOCASE, c6 ASC, c4) as subq9             WHERE EXISTS (              SELECT t62.c3 AS c4, t61.c2 AS c5, t61.c2 AS c6, t62.c0 AS c7               FROM t0 AS t61                 INNER JOIN t0 AS t62                  ON (t62.c2 < t61.c3)               WHERE t62.c1 <> t62.c1               ORDER BY c4, c6               LIMIT 7465852383001526970 OFFSET 7892240695901365899              )             ORDER BY c16 ASC) as subq10          WHERE 51 < subq10.c14 OR subq10.c17 =           CASE subq10.c16 WHEN subq10.c16 IS NULL THEN subq10.c16                ELSE subq10.c16           END          ORDER BY c12, c8 COLLATE RTRIM          LIMIT 414725328173764698 ;.mode quote CREATE TABLE tbl0(c0 INTEGER, c1 BLOB, c2 TEXT);CREATE TABLE t0 (             c0 TEXT,             c1 TEXT,             c2 BOOLEAN,             c3 BOOLEAN,             c4 TEXT         );          SELECT subq1.c5 AS c6         FROM (SELECT FALSE AS c5            FROM (SELECT t1.c3 AS c5, t1.c2 AS c6, t1.c2 AS c7                FROM t0 AS t1                WHERE t1.c1 >= t1.c1                ORDER BY c6, c7 ASC, c7                LIMIT 5114586222650338778 ) as subq0              INNER JOIN t0 AS t2               ON (subq0.c6 = t2.c3 AND subq0.c7 <> subq0.c6 AND true)            WHERE true            ORDER BY c5) as subq1         WHERE subq1.c5 <> subq1.c5 AND subq1.c5 <> subq1.c5 AND subq1.c5 =          CASE WHEN NULLIF(subq1.c5, subq1.c5) = subq1.c5 OR subq1.c5 <>           CASE subq1.c5 WHEN subq1.c5 = subq1.c5 OR subq1.c5 = subq1.c5 THEN subq1.c5                WHEN true THEN subq1.c5                ELSE subq1.c5           END THEN subq1.c5               ELSE subq1.c5          END         ORDER BY c6 COLLATE RTRIM DESC, c6, c6, c6 COLLATE NOCASE ASC;CREATE TABLE t0 (c0 INTEGER UNIQUE, c1 INTEGER, c2 TEXT UNIQUE, c3 TEXT UNIQUE); CREATE INDEX i8 ON t0(c1) WHERE (t0.c3 < 'default'); INSERT INTO t0 (c0, c1, c2, c3) VALUES (894, 89, 'unique_0_578', 'unique_0_359'), (110, (41 + 8), 'unique_1_214', 'unique_1_463'), (588, 74, 'unique_2_657', 'unique_2_44'), (155, (22 * 4), 'unique_3_705', 'unique_3_765'), (580, NULL, 'unique_4_635', 'unique_4_302'), (936, (13 + 0), 'unique_5_819', 'unique_5_766'), (888, 58, 'unique_6_681', 'unique_6_32'), (125, NULL, 'unique_7_781', 'unique_7_39'), (209, 87, 'unique_8_74', 'unique_8_945'), (30, 69, 'unique_9_330', 'unique_9_340'); SELECT t0.c1, t0.c0, COALESCE(AVG(t0.c0) OVER (PARTITION BY t0.c3 ORDER BY t0.c0 DESC), 9) FROM t0 WHERE (t0.c1) IN (SELECT t0.c1 FROM t0);CREATE TABLE t0 (     c0 BOOLEAN,     c1 BOOLEAN,     c2 INTEGER,     c3 NULL,     c4 TEXT ); SELECT subq1.c8 AS c9 FROM (SELECT TRUE AS c8    FROM (SELECT t1.c1 AS c5, t1.c0 AS c6, t1.c0 AS c7       FROM t0 AS t1       WHERE t1.c1 = t1.c0       ORDER BY c5       LIMIT 5819351589579946652 ) as subq0    WHERE trim(67,NULL) IS NOT NULL    ORDER BY c8) as subq1 WHERE subq1.c8 <>   CASE subq1.c8 WHEN subq1.c8 = subq1.c8 THEN subq1.c8       WHEN subq1.c8 = subq1.c8 THEN subq1.c8       WHEN subq1.c8 = FALSE OR subq1.c8 <> subq1.c8 THEN subq1.c8       WHEN subq1.c8 = subq1.c8 THEN subq1.c8       WHEN subq1.c8 <> subq1.c8 THEN subq1.c8       WHEN subq1.c8 =    CASE subq1.c8 WHEN subq1.c8 <> subq1.c8 THEN subq1.c8        WHEN subq1.c8 IS NOT NULL AND subq1.c8 = subq1.c8 THEN subq1.c8        WHEN false THEN subq1.c8        WHEN subq1.c8 = CAST(subq1.c8 AS BOOLEAN) THEN subq1.c8        WHEN subq1.c8 = subq1.c8 THEN     CASE WHEN subq1.c8 <> subq1.c8 THEN      CASE WHEN subq1.c8 = subq1.c8 OR true THEN CAST(subq1.c8 AS INTEGER)          ELSE subq1.c8     END         ELSE subq1.c8    END        WHEN CAST(max(98,TRUE,NULL) AS TEXT) <> subq1.c8 OR     CASE WHEN subq1.c8 IS NOT NULL THEN subq1.c8         ELSE COALESCE(subq1.c8, subq1.c8)    END =     CASE subq1.c8 WHEN subq1.c8 = subq1.c8 THEN subq1.c8         WHEN subq1.c8 = subq1.c8 THEN subq1.c8         ELSE subq1.c8    END AND subq1.c8 <> subq1.c8 THEN subq1.c8        ELSE subq1.c8   END THEN subq1.c8       ELSE subq1.c8  END ORDER BY c9;